//Логинов Андрей 2гейм1 кт по матрциам 

Random rnd = new Random(); //оператор рандома
Console.WriteLine("Сколько строк в матрице?");
int n = Convert.ToInt32(Console.ReadLine()); //отвечает за колчиество строк
Console.WriteLine("Сколько элементов в матрице?");
int m = Convert.ToInt32(Console.ReadLine()); //отвечает за количество элементов
List<int> dynam = new List<int>(); //динамический массив, который отвечает за номера зеркально симметричных строк
int[,] massiv1 = new int[n,m]; //первая матрица
int[,] massiv2 = new int[n,m]; //вторая матрица
int eleme = massiv1.GetLength(1) - 1; //отвечает за индексы совпадающих элемментов
int popad = 0; // отвечает за проверку того что совпала вся строка, а не пара чисел из неё
Zapoln(massiv1,massiv2,rnd); // вызов функции, которая заполнит массив рандомными числами
/* расскоментрируйте код, если захотите проверить работоспособность кода
massiv1[0, 2] = 3;
massiv1[0, 1] = 2;
massiv1[0, 0] = 1;
massiv2[0, 0] = 3;
massiv2[0, 1] = 2;
massiv2[0, 2] = 1;
*/
Zerkalo(massiv1,massiv2,dynam); //вызов функции, которая проверит наличие зеркально симметричных строк
Vivod(massiv1,massiv2,dynam); //вызов функции, которая выведет матрицы и номера зеркально симметричных строк
void Zapoln(int[,] massiv1, int[,] massiv2, Random rnd) // в аргументах 2 матрицы и рандом
{
    //так как матрицы у нас равны по размерам засунул всё в один цикл, а не в 2
    for (int i = 0; i < massiv1.GetLength(0); i++) //проходимся по количеству строк 
    {
        for (int j = 0; j < massiv1.GetLength(1); j++) // проходимся по количеству элементов в строке
        {
            massiv1[i, j] = rnd.Next(-10, 10); //значение для ячейки i,j матрицы номер 1 задаётся рандомно от -10 до 10
            massiv2[i, j] = rnd.Next(-10, 10); //значение для ячейки i,j матрицы номер 2 задаётся рандомно от -10 до 10
        }
    }
}
void Zerkalo(int[,] massiv1, int[,] massiv2, List<int> dynam) //принимает в аргументы обе матрицы и лист
{
    //так как матрицы равны по количеству строк и символов выполняю всё в одном цикле
    for (int i = 0; i < massiv1.GetLength(0); i++) //проходимся по строкам матрицы
    {
        //с каждым переходом на новую строку я обновляю количество элеменнтов и колчество чисел, которые совпали
        eleme = massiv1.GetLength(1) - 1; //обновление количества элеменнтов
        popad = 0; //обновление количества чисел, которое совпало
        for (int j = 0; j < massiv1.GetLength(1); j++) //проходимся по элементам в строке
        {
            if (massiv1[i, j] == massiv2[i, eleme]) //если значение ячейки из матрицы 1 совпало с зеркальным симметричным значением матрицы 2, то мы увеличиваем popad на 1
            // это нужно чтобы по завершению цикла в строке проверить совпали все числа или часть из них
            {
                popad++;
            }
            --eleme; //переходим на один элемент назад во второй матрице. условно с [0,2] переходим на [0,1]
        }
        if (popad == massiv1.GetLength(1)) //если колчество зеркально симметричных элеменнтов равно количеству элементтов в строке, то добавляем номер этой строки в лист
        {
            dynam.Add(i+1); //добавляю i+1 чтобы пользователю было понятнее о какой строке идёт речь
        }
    }
}
void Vivod(int[,] massiv1, int[,] massiv2, List<int> dynam)// принимает в аргументы оби матрицы и лист
{
    Console.WriteLine("Матрица номер 1:"); //вываод матрицы номер 1
    for (int i = 0; i < massiv1.GetLength(0); i++) //отвечает за проход по строкам
    {
        for (int j = 0; j < massiv1.GetLength(1); j++) // отвечает за проход по элементам
        {
            Console.Write("{0,4}", massiv1[i,j]);
        }
        Console.WriteLine();
    }
    Console.WriteLine("Матрица номер 2:"); //вывод матрицы номер 2
    for (int i = 0; i < massiv2.GetLength(0); i++) //отвечает за проход по строкам
    {
        for (int j = 0; j < massiv2.GetLength(1); j++) // отвечает за проход по элементам
        {
            Console.Write("{0,4}", massiv2[i,j]);
        }
        Console.WriteLine();
    }

    if (dynam.Count == 0) //если в матрицах нет зеркально симметричных строк, то выводим что их нет
    {
        Console.WriteLine("Зеркально симметричных строк нет");
    }
    else //если есть хоть одна строка, то выводим номер\номера
    {
        Console.WriteLine("Номера зеркально симметричных строк ");
        for (int i = 0; i < dynam.Count; i++)
        {
            Console.Write(dynam[i] + " ");
        }   
    }
}